<apex:page
        controller="sunEditorController">
    <apex:includeScript value="{!URLFOR($Resource.SunEditor2, 'suneditor241206/dist/suneditor.min.js')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.SunEditor2, 'suneditor241206/dist/css/suneditor.min.css')}"/>
    

    <div>
        <textarea id="editor" style="width: 100%; height: 100%;"></textarea>
    </div>

    <script>
        // var lexOrigin = "https://daeunextier-1f-dev-ed.develop.lightning.force.com";
        
        var lexOrigin="https://"+ "{!JSENCODE(gDomainHomeHost)}"; //apex class에서 얻은 변수 사용
        console.log('page lexOrigin: '+lexOrigin);

        var editor;
        // SunEditor 초기화
        // editor = SUNEDITOR.create(document.getElementById("editor"), {
        //         // plugins: ['image','table'],
        //         buttonList: [
        //             ['bold', 'italic', 'underline', 'strike'], 
        //             ['font', 'fontSize', 'formatBlock'], 
        //             ['align', 'list', 'table'], 
        //             ['link', 'image', 'video'], 
        //             ['codeView'],
        //             ['fontColor'],
        //             ['save', 'template']
        //         ],
        //         // attributesWhitelist: {
        //         //     img: 'src|alt|style|width|height' // img 태그에 허용할 속성 설정
        //         // },
        //         height: 600,
        //         imageWidth: 200, // 이미지의 기본 너비
        //         imageHeight: 200
        //     });
        document.addEventListener("DOMContentLoaded", function() {
            editor = SUNEDITOR.create(document.getElementById("editor"), {
                // plugins: ['image','table'],
                buttonList: [
                    ['bold', 'italic', 'underline', 'strike'], 
                    ['font', 'fontSize', 'formatBlock'], 
                    ['align', 'list', 'table'], 
                    ['link', 'image', 'video'], 
                    ['codeView'],
                    ['fontColor'],
                    ['save', 'template']
                ],
                // attributesWhitelist: {
                //     img: 'src|alt|style|width|height' // img 태그에 허용할 속성 설정
                // },
                height: 600,
                imageWidth: 200, // 이미지의 기본 너비
                imageHeight: 200
            });
            
            // editor.readOnly(true);
            // editor.toolbar.hide();
              /*
                에디터 내용이 변경되면 aura로 이벤트 전달
                */
                editor.onChange = function (contents, core) {
                    var datas = {
                        payload : contents,
                        type:"sunEditorContent"
                    }
                    parent.postMessage(datas, lexOrigin);
                }
            
        });


        window.addEventListener("message", function(event) {
            
                console.log('Message received.');
                console.log('event.origin: ' + event.origin);
                console.log('event.data: ', event.data);

                if (event.origin !== lexOrigin) {
                    console.warn("Origin mismatch. Message rejected.");
                    return;
                }

                console.log("Valid message received: ", event.data);
                
                
                 // "save" 메시지 처리
                 if (event.data === "save") {
                    const message = {
                        type: "sunEditorContent",
                        payload: ""
                    };

                    editor.save();
                    console.log('save Content: '+ document.getElementById("editor").value);
                    message.payload=document.getElementById("editor").value;
                    
                    
                    console.log('Sending content to parent:', message.payload);
                
                    // 부모 프레임으로 콘텐츠 전송
                    parent.postMessage(message, lexOrigin);

                    // editor.readOnly(true);
                    // editor.toolbar.hide();
                }
                else if(event.data==="cancel"){
                    console.log('cancel start');
                    // editor.readOnly(true);
                    // editor.toolbar.hide();
                    // console.log('cancel end');
                }
                else{ //edit일 때
                    // editor.readOnly(false);
                    // editor.toolbar.show();
                    console.log('start onload');
                    editor.setContents(event.data);
                
                }
            }, false);
    </script>
   

</apex:page>
