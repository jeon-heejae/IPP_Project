<apex:page
        controller="sunEditorController">
    <apex:includeScript value="{!URLFOR($Resource.SunEditor2, 'suneditor241206/dist/suneditor.min.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.pdfgen4, '/dom-to-image.min.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.pdfgen4, '/jspdf.min.js')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.SunEditor2, 'suneditor241206/dist/css/suneditor.min.css')}"/>
    

    <div id="canvasUse" class="se-container se-wrapper-inner se-wrapper-wysiwyg sun-editor-editable">
        <textarea id="editor" style="width: 100%; height: 100%;"></textarea>
    </div>

    <script>
        // var lexOrigin = "https://daeunextier-1f-dev-ed.develop.lightning.force.com";
        
        var lexOrigin="https://"+ "{!JSENCODE(gDomainHomeHost)}"; //apex class에서 얻은 변수 사용
        console.log('page lexOrigin: '+lexOrigin);

        var editor;
        
        document.addEventListener("DOMContentLoaded", function() {
            editor = SUNEDITOR.create(document.getElementById("editor"), {
                // plugins: ['image','table'],
                buttonList: [
                    ['bold', 'italic', 'underline', 'strike'], 
                    ['font', 'fontSize', 'formatBlock'], 
                    ['align', 'list', 'table'], 
                    ['link', 'image', 'video'], 
                    ['codeView'],
                    ['fontColor'],
                    ['save', 'template']
                ],
                height: 600,
                imageWidth: 200, // 이미지의 기본 너비
                imageHeight: 200,
                imageAlignShow : true, //이미지 가로정렬 옵션
                imageRotation : true, // 이미지 회전 옵션
                iframe : true, //context 메뉴, 이미지클릭시 영역을 벗어날 경우 이상동작으로 인해 iframe 옵션을 준다.
                fullPage : true // contents 추출 시 html 문서 형태로 추출 (doctype, head, body tag포함됨)
            });
            
            // editor.readOnly(true);
            // editor.toolbar.hide();
              /*
                에디터 내용이 변경되면 aura로 이벤트 전달
                */
                editor.onChange = function (contents, core) {
                    var datas = {
                        payload : contents,
                        type:"sunEditorContent"
                    }
                    parent.postMessage(datas, lexOrigin);
                }
            
        });


        window.addEventListener("message", function(event) {
            
                console.log('Message received.');
                console.log('event.origin: ' + event.origin);
                console.log('event.data: ', event.data);

                if (event.origin !== lexOrigin) {
                    console.warn("Origin mismatch. Message rejected.");
                    return;
                }

                console.log(JSON.stringify(event.data));
                strRecordId = event.data.currRecordId;

                if(event.data.type == "DATA"){ //초기 저장된 데이터를 editor에 표시
                    editor.setContents(event.data.data);
                }
                else if(event.data.type == "PREVIEW"){
                    preview();
                }
                

                console.log("Valid message received: ", event.data);
                
                
                 // "save" 메시지 처리
                 if (event.data === "save") {
                    const message = {
                        type: "sunEditorContent",
                        payload: ""
                    };

                    editor.save();
                    console.log('save Content: '+ document.getElementById("editor").value);
                    message.payload=document.getElementById("editor").value;
                    
                    
                    console.log('Sending content to parent:', message.payload);
                
                    // 부모 프레임으로 콘텐츠 전송
                    parent.postMessage(message, lexOrigin);

                    // editor.readOnly(true);
                    // editor.toolbar.hide();
                }
                else if(event.data==="cancel"){
                    console.log('cancel start');
                    // editor.readOnly(true);
                    // editor.toolbar.hide();
                    // console.log('cancel end');
                }
                else{ //edit일 때
                    // editor.readOnly(false);
                    // editor.toolbar.show();
                    console.log('start onload');
                    editor.setContents(event.data);
                
                }
            }, false);

            function preview(){
                const canvasUse = document.getElementById("canvasUse");
                canvasUse.style.display = "block";
                canvasUse.innerHTML = editor.getContents();

                domtoimage.toPng(canvasUse)
                    .then(function (dataUrl) {
                        let img = new Image();
                        img.onload = function () {
                            let imgWidth = 170; // 이미지 가로 길이(mm), A4 기준으로 설정
                            let pageHeight = imgWidth * 1.414; // 출력 페이지 세로 길이
                            let imgHeight = img.height * imgWidth / img.width;
                            let heightLeft = imgHeight;
                            let margin = 20; // 출력 페이지 여백 설정
                            let doc = new jsPDF('p', 'mm');
                            let position = 10;

                            window.scrollTo(0, 0);
                            canvasUse.style.display = "none";

                            // 첫 페이지 출력
                            doc.addImage(dataUrl, 'PNG', margin, position, imgWidth, imgHeight);
                            heightLeft -= pageHeight;

                            // 여러 페이지 출력 처리
                            while (heightLeft >= 20) {
                                position = heightLeft - imgHeight;
                                position -= 20;
                                doc.addPage();
                                doc.addImage(dataUrl, 'PNG', margin, position, imgWidth, imgHeight);
                                heightLeft -= pageHeight;
                            }

                            // SFDC로 저장이 필요할 경우 주석 후 fileUpload 함수 호출
                            // window.open(doc.output('bloburl'));
                            fileUpload(doc.output('datauristring'));
                        };
                        img.src = dataUrl;
                    })
                    .catch(function (error) {
                        console.error("oops, something went wrong!", error);
                    });
            }
    
    </script>
   

</apex:page>
